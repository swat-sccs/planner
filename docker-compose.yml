services:
  planner:
    image: registry.sccs.swarthmore.edu/sccs/planner/planner:latest
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      NODE_ENV: production
      DOMAIN: https://plan.sccs.swarthmore.edu
    depends_on:
      - planner-db
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.planner.entrypoints=https"
        - "traefik.http.routers.planner.rule=Host(`plan.sccs.swarthmore.edu`)"
        - "traefik.http.routers.planner.tls=true"
        - "traefik.http.routers.planner.tls.certresolver=letsEncrypt"
        - "traefik.http.services.planner.loadbalancer.server.port=3000"
        # For Redirect
        - "traefik.http.middlewares.scheduleRedirect.headers.accesscontrolallowmethods=GET,OPTIONS,PUT"
        - "traefik.http.middlewares.scheduleRedirect.headers.accesscontrolallowheaders=*"
        - "traefik.http.middlewares.scheduleRedirect.headers.accesscontrolalloworiginlist=https://schedule.sccs.swarthmore.edu, https://plan.sccs.swarthmore.edu"
        - "traefik.http.middlewares.scheduleRedirect.headers.accesscontrolmaxage=100"
        - "traefik.http.middlewares.scheduleRedirect.headers.addvaryheader=true"
        - "traefik.http.routers.planner.middlewares=scheduleRedirect"
    command: sh -c "sleep 5 && npx prisma migrate deploy && npm start "
    networks:
      - traefik
      - internal
    healthcheck:
      test: ["CMD", "curl", "--fail", "-G", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 10

  planner-prisma-studio:
    container_name: planner-prisma-studio
    image: registry.sccs.swarthmore.edu/sccs/planner/planner:latest
    volumes:
      - .:/usr/src/app
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.planner_prisma.entrypoints=https"
        - "traefik.http.routers.planner_prisma.rule=Host(`plan.sccs.swarthmore.edu`) && PathPrefix(`/prisma`)"
        - "traefik.http.routers.planner_prisma.tls=true"
        - "traefik.http.routers.planner_prisma.tls.certresolver=letsEncrypt"
        - "traefik.http.services.planner_prisma.loadbalancer.server.port=1111"
    environment:
      NODE_ENV: production
    env_file:
      - .env
    ports:
      - 1111:1111
    networks:
      - internal
    command: sh -c "npx prisma studio -p 1111 -n 0.0.0.0"

  planner-db:
    hostname: planner-db
    image: postgres:16.4-bullseye
    volumes:
      - planner-dbdata:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - 5432:5432
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --dbname lists --username lists"]
      interval: 10s
      timeout: 5s
      retries: 5

  planner-pgadmin:
    image: dpage/pgadmin4
    container_name: planner-pgadmin
    restart: always
    ports:
      - 8888:8888
    env_file:
      - .env
    environment:
      SCRIPT_NAME: /pgadmin
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.planner_pgadmin.entrypoints=https"
        - "traefik.http.routers.planner_pgadmin.rule=Host(`plan.sccs.swarthmore.edu`) && PathPrefix(`/pgadmin`)"
        - "traefik.http.routers.planner_pgadmin.tls=true"
        - "traefik.http.routers.planner_pgadmin.tls.certresolver=letsEncrypt"
        - "traefik.http.services.planner_pgadmin.loadbalancer.server.port=8888"
    depends_on:
      - planner-db
    networks:
      - internal
      - traefik
    volumes:
      - planner-pgadmindata:/var/lib/pgadmin

  planner-cron:
    image: registry.sccs.swarthmore.edu/sccs/planner-cron/planner-cron:latest
    build:
      context: .
      dockerfile: ./Dockerfile.cron
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      - planner-db
    networks:
      - internal

# (re)define traefik proxy network
networks:
  internal:
    driver: overlay
  traefik:
    # defined elsewhere
    external: true

volumes:
  planner-dbdata:
    name: planner-dbdata
    driver_opts:
      type: nfs
      o: "nfsvers=4,addr=130.58.218.26,rw,nolock,soft"
      device: ":/volumes/scheduler-dbdata"
  planner-pgadmindata:
    name: planner-pgadmindata
    driver_opts:
      type: nfs
      o: "nfsvers=4,addr=130.58.218.26,rw,nolock,soft"
      device: ":/volumes/planner-pgadmindata"
