generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "relationJoins", "strictUndefinedChecks","fullTextIndex"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int          @id @default(autoincrement())
  uuid  String       @unique
  email String       @unique
  name  String?
  plans CoursePlan[]
}

model CoursePlan {
  id      Int      @id @default(autoincrement())
  name    String
  userId  Int?
  courses Course[]
  User    User?    @relation(fields: [userId], references: [id])
  year    String
}

model Course {
  id                      Int                @id @default(autoincrement())
  courseId                Int
  courseReferenceNumber   String             @unique
  courseNumber            String
  subject                 String
  scheduleTypeDescription String
  courseTitle             String
  descriptionUrl          String
  description             String
  creditHours             Float
  maximumEnrollment       Int
  enrollment              Int
  seatsAvailable          Int
  facultyId               Int
  facultyMeetId           Int
  instructor              Faculty            @relation(fields: [facultyId], references: [id])
  facultyMeet             MeetingsFaculty    @relation(fields: [facultyMeetId], references: [id])
  sectionAttributes       sectionAttribute[]
  CoursePlan              CoursePlan[]
  year                    String
  @@index([subject, courseNumber], map: "subj_course")
}

model Faculty {
  id                    Int      @id @default(autoincrement())
  bannerId              String
  courseReferenceNumber String   @unique
  displayName           String
  emailAddress          String
  courses               Course[]
  year                  String
}

model MeetingsFaculty {
  id                    Int         @id @default(autoincrement())
  category              String
  courseReferenceNumber String      @unique
  meetingTimeID         Int
  courses               Course[]
  meetingTimes          MeetingTime @relation(fields: [meetingTimeID], references: [id])
  year                  String
}

model MeetingTime {
  id                     Int               @id @default(autoincrement())
  beginTime              String
  building               String
  buildingDescription    String
  room                   String
  category               String
  courseReferenceNumber  String            @unique
  endDate                String
  endTime                String
  startDate              String
  hoursWeek              Float
  meetingType            String
  meetingTypeDescription String
  monday                 Boolean
  tuesday                Boolean
  wednesday              Boolean
  thursday               Boolean
  friday                 Boolean
  saturday               Boolean
  sunday                 Boolean
  facultyMeet            MeetingsFaculty[]
  year                   String
}

model sectionAttribute {
  id                    Int     @id @default(autoincrement())
  code                  String
  description           String
  courseReferenceNumber String  @unique
  courseId              Int?
  Course                Course? @relation(fields: [courseId], references: [id])
  year                  String
}
