generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int          @id @default(autoincrement())
  email String       @unique
  name  String?
  plans CoursePlan[]
}

model CoursePlan {
  id      Int      @id @default(autoincrement())
  name    String
  userId  Int?
  courses Course[]
  User    User?    @relation(fields: [userId], references: [id])
}

model Course {
  id                      Int                @id @default(autoincrement())
  courseId                Int
  courseReferenceNumber   String
  courseNumber            String
  subject                 String
  scheduleTypeDescription String
  courseTitle             String
  descriptionUrl          String
  description             String
  creditHours             Float
  maximumEnrollment       Int
  enrollment              Int
  seatsAvailable          Int
  facultyId               Int
  facultyMeetId           Int
  instructor              Faculty            @relation(fields: [facultyId], references: [id])
  facultyMeet             MeetingsFaculty    @relation(fields: [facultyMeetId], references: [id])
  sectionAttributes       sectionAttribute[]
  CoursePlan              CoursePlan?        @relation(fields: [coursePlanId], references: [id])
  coursePlanId            Int?
}

model Faculty {
  id                    Int      @id @default(autoincrement())
  bannerId              String
  courseReferenceNumber String
  displayName           String
  emailAddress          String
  courses               Course[]
}

model MeetingsFaculty {
  id                    Int         @id @default(autoincrement())
  category              String
  courseReferenceNumber String
  meetingTimeID         Int
  courses               Course[]
  meetingTimes          MeetingTime @relation(fields: [meetingTimeID], references: [id])
}

model MeetingTime {
  id                     Int               @id @default(autoincrement())
  beginTime              String
  building               String
  buildingDescription    String
  room                   String
  category               String
  courseReferenceNumber  String
  endDate                String
  endTime                String
  startDate              String
  hoursWeek              Float
  meetingType            String
  meetingTypeDescription String
  monday                 Boolean
  tuesday                Boolean
  wednesday              Boolean
  thursday               Boolean
  friday                 Boolean
  saturday               Boolean
  sunday                 Boolean
  facultyMeet            MeetingsFaculty[]
}

model sectionAttribute {
  id                    Int     @id @default(autoincrement())
  code                  String
  description           String
  courseReferenceNumber String
  courseId              Int?
  Course                Course? @relation(fields: [courseId], references: [id])
}
